{
  "name": "Arin",
  "lastname": "Sinabian",
  "email": "arin.sinabian@gmail.com",
  "birthday": "1984-04-01T01:00:00",
  "pdfLayout": [
    [0, 1],
    [2, 3],
    [4, 5],
    [6, 7],
    [8, 9, 10],
    [11, 12, 13],
    [14, 15],
    [16, 17, 18]
  ],
  "en": {
    "role": "Freelancing Full stack developer/Architect",
    "aboutMe": "I am a system architect with both backend and frontend experience. I started working as a developer in 2008 and have worked in different industries and in different countries. The interest for computer and programming has been with me since I was a child. I am a creative developer who does not only want to code but I also want to get invovled in the product I am creating. My strengths lie in my ability to communicate with other developers and customers/product owner and so on. I am very driven, analytical and positive. I am social and find it easy to make connections. I find it easy to learn new technology and methods for solving tasks. I think it's fun to spread my knowledge but also good at listening and taking in new knowledge.",
    "experince": [
      {
        "title": "Safeline",
        "icon": "/safeline.png",
        "period": {
          "from": "2023-01-10T00:00:00Z",
          "to": null
        },
        "role": "Backend developer/Architect",
        "location": "Tyres√∂/Stockholm",
        "description": "SafeLine develops and manufacturs elevator products such as elevator telephones, control systems and replacement products to repair elevators. SafeLine also develops systems to monitor elevators with their IoT products that can report the movement of the elevator, door openings and other events related to the elevator. My role at SafeLine as a backend developer is to continue building on Orion, which is the system that receives data from all their IoT products. The system architecture is built with Azure Eventhub which streams events to all microservices. The microservices in turn produce events that can be consumed by other microservices. Architecture is built so the services are very loosely coupled and makes it easy to release new versions of the microservices. I have contributed by simplifying the architecture with the parts I have worked with. I have also improved CI/CD processes for both backend and frontend. My daily work has been to communicate with product owner, frontend developers to develop good solutions.",
        "tech": {
          "server": [
            "Microservices",
            "C#",
            "ASP.NET 6,7",
            "MongoDB (Mongodb driver)",
            "SQL (Postgres)",
            "xUnit.NET",
            "Swashbuckle (Swagger)",
            "REST API"
          ],
          "client": [],
          "environment": [
            "Azure",
            "Azure Cosmos DB (mongodb api)",
            "Docker",
            "Kubernetes",
            "Azure Kubernets",
            "Azure EventHub",
            "Timescale (Postgres for timeseries)",
            "Azure Service Bus",
            "Grafana",
            "Loki",
            "Promethues"
          ],
          "devops": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases",
            "Kubernetes",
            "Velero (Backup)"
          ]
        }
      },
      {
        "title": "Charge Amps",
        "icon": "/logo-charge-amps-large.png",
        "period": {
          "from": "2022-02-01T00:00:00Z",
          "to": null
        },
        "role": "Backend developer",
        "location": "Stockholm",
        "description": "Charge Amps makes charging boxes for electric/hybrids cars. Different teams were responsible for different parts of Charge Amp's cloud service. I was in a team that developed OCPP server, but I contributed to several teams. My role was to develop the OCPP server that follows the OCPP standard for communication between cloud and charging box. This includes, among other things, controlling the current strength during charging. Load balancing chargers between other consumers of power so fuses don't blow. I contributed my knowledge in microservice architecture, unit testing, integration testing. I set up new microservices from scratch written in .NET with Helm charts deployed on Kubernetes. I also learned a new framework called Proto.Actor which is a distributed programming model called Actor Model. OCPP server was developed with the Proto.Actor framework which made it possible to scale to 100,000 charging boxes simultaneously without problems.",
        "tech": {
          "server": [
            "Microservices",
            "C#",
            "ASP.NET 6",
            "Proto.Actor",
            "Dapper",
            "SQL",
            "xUnit.NET",
            "Swashbuckle (Swagger)",
            "REST API",
            "MassTransit"
          ],
          "client": [],
          "environment": [
            "Azure",
            "Azure SQL",
            "Docker",
            "Azure Kubernetes",
            "Azure Redis",
            "RabbitMQ",
            "Kafka",
            "Azure Cosmos DB"
          ],
          "devops": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases",
            "Kubernetes",
            "Helm",
            "Grafana",
            "Loki",
            "Tempo",
            "Prometheus"
          ]
        }
      },
      {
        "title": "Klara consulting (Consulting via Spree)",
        "icon": "/KC_logo_Black_payoff.svg",
        "period": {
          "from": "2021-01-01T00:00:00Z",
          "to": "2022-02-01T00:00:00Z"
        },
        "role": "Full stack developer/Architect",
        "location": "Stockholm",
        "description": "Klara Consulting had developed a portal for its clients but lacked document sharing functionality with its clients. Klara Consulting used SharePoint for its clients, but it was not optimal. Me and UX were given the role of finding out what the requirements were and what functionality was available. UX developed the design in Figma and together with the users, I and UX found the requirements together with Klara Consulting. The existing system ran in Kubernetes but was developed as a monolith. I developed a microservice architecture where different microservices were responsible for different business functions. I also made a service that handled SharePoint in a simple way. Which enabled document sharing based on office 365 for external parties without using SharePoint. I also set up CI/CD with Azure DevOps and Helm charts.",
        "tech": {
          "server": [
            "Microservices",
            "Event driven",
            "C#",
            "ASP.NET 5",
            "Entity Framework Core",
            "SQL",
            "MSTest",
            "Swashbuckle (Swagger)",
            "REST API",
            "Microsoft Graph API",
            "MSAL"
          ],
          "client": [
            "TypeScript",
            "Angular",
            "HTML",
            "SCSS",
            "Tailwind CSS",
            "Visual Studio Code"
          ],
          "environment": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases",
            "Kubernetes",
            "Helm",
            "Terraform"
          ],
          "devops": [
            "Docker",
            "Azure Kubernetes",
            "Azure Kubernetes",
            "Azure Redis",
            "Azure SQL",
            "Azure Service Bus",
            "RabbitMQ (lokal utv)",
            "Bridge to Kubernetes"
          ]
        }
      },
      {
        "title": "Klarna (In-house at Spree)",
        "icon": "/klarna.svg",
        "period": {
          "from": "2021-05-01T00:00:00Z",
          "to": "2021-11-01T00:00:00Z"
        },
        "role": "Full stack developer/Architect",
        "location": "Stockholm",
        "description": "Spree was commissioned to launch a game for Klarna to be used internally for their support department. It was a web-based game written in Unity. My role was to develop an architecture for the backend that would manage users and results during the game. Users were logged in via Azure Active Directory B2C then sent into the game in the browser. I was also responsible for the backend being able to handle the large number of employees from different parts of the world who would be playing at the same time. I used the Azure CDN to be able to deliver the game at about 200-300Mb to all users without burdening the actual server with the game. I also developed a control of the game so that it was possible to make \"events\" of the game so that everyone could enter the game at the same time, which the customer needed.",
        "tech": {
          "server": [
            "C# ASP.NET 5",
            "Azure Cosmos DB",
            "Swashbuckle (Swagger)",
            "REST API",
            "Docker",
            "MSAL"
          ],
          "client": [
            "Angular",
            "TypeScript",
            "HTML",
            "SCSS",
            "Visual Studio Code"
          ],
          "environment": [
            "Azure",
            "Azure Cosmos DB",
            "Azure CDN",
            "Azure Active Directory B2C",
            "Lasttestning (https://loadster.app/)"
          ],
          "devops": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases"
          ]
        }
      },
      {
        "title": "MTR (Consulting via Spree)",
        "icon": "/mtr.png",
        "period": {
          "from": "2020-11-01T00:00:00Z",
          "to": "2021-01-31T00:00:00Z"
        },
        "role": "Backend developer",
        "location": "Stockholm",
        "description": "MTR Needed help with maintenance and development of their apps. I joined as a backend developer but also as extra support for the frontend. I contributed knowledge in how to write code that is easy to test in the backend. I shared my experience and knowledge with the team remotely via teams and on site. I reviewed both backend and frontend code on pull requests. I also set up Azure SignalR and implemented it in the backend and showed the frontend developers how to use it. I also worked closely with the tester, so bugs were resolved quickly. I made suggestions for improvements for Azure DevOps pipelines and automatic update of APIM which I implemented.",
        "tech": {
          "server": [
            "C#",
            "ASP.NET 5",
            "Entity Framework Core",
            ".NET Core IoC",
            "NuGet",
            "SQL",
            "MSTest",
            "Swashbuckle (Swagger)",
            "REST API"
          ],
          "client": [
            "Angular",
            "TypeScript",
            "HTML",
            "SCSS",
            "Visual Studio Code"
          ],
          "environment": [
            "Docker, Azure Kubernetes",
            "Azure API Managment",
            "Cosmos DB",
            "Azure SignalR"
          ],
          "devops": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases"
          ]
        }
      },
      {
        "title": "World Expo 2020 (in-house at Spree)",
        "icon": "/Expo-2020-logo.png",
        "period": {
          "from": "2020-01-01T00:00:00Z",
          "to": "2021-08-01T00:00:00Z"
        },
        "role": "Full stack developer/Architect",
        "location": "Stockholm",
        "description": "World Expo 2020 is an exhibition that was supposed to be held in Dubai in 2020 (postponed to 2021 due to covid-19) where countries showcase the latest in technology, development, research, etc. Spree was commissioned to develop part of Sweden's exhibition. Spree developed interactive solutions in Unity and web that would present Sweden and the companies that are exhibitors. My role in the project was to develop a web-based CMS that technically suited the interactive Unity stations and to develop a web application for the guides in the exhibition. I worked in a team of 10 people where my role was full stack developer and responsible for the Unity developers being able to easily integrate with the CMS. I met with the developers daily to support them technically. I made sure that the CMS was easy to use for expo partners and I also worked out how the interface should look. I sketched how the entire architecture and integration would look like between the CMS and all applications. I was also responsible for developing a progressive web application that would help the guides to navigate and help visitors.",
        "tech": {
          "server": [
            "C#",
            "ASP.NET Core 3.1",
            "Entity Framework Core",
            "SQL",
            "LINQ",
            ".NET Core IoC",
            "NuGet",
            "NUnit",
            "Swashbuckle (Swagger)",
            "REST API"
          ],
          "client": [
            "TypeScript",
            "Angular",
            "Material Design",
            "Flex Layout",
            "NPM",
            "HTML",
            "SCSS",
            "Visual Studio Code",
            "React",
            "Redux",
            "React Router"
          ],
          "environment": [
            "Nginx",
            "Azure",
            "Azure SQL",
            "Azure App Service (Docker container), Docker Container"
          ],
          "devops": [
            "Bitbucket (Git)",
            "Docker hub",
            "Docker Container",
            "WSL 2",
            "Docker Compose (use in Development)"
          ]
        }
      },
      {
        "title": "Kone (in-house at Spree)",
        "icon": "/KONE.svg",
        "period": {
          "from": "2018-03-01T00:00:00Z",
          "to": "2020-02-01T00:00:00Z"
        },
        "role": "Full stack developer/Architect",
        "location": "Stockholm",
        "description": "KONE needed a tool/system to support the business from sales to a finished elevator. I helped KONE further develop the SET tool (Sales and Engineering Tool). The purpose of the system is to simplify and guide different roles at KONE through the process from selling to building an elevator. The requirements were not decided but gathered during development by me and the customer together and released continuously. My role was to develop the system and to lead a team of 3 developers where I planned sprints with a UX/Project Manager with frequent releases of about 2 - 4 weeks. I relieved the developers from the DevOps bits so the developers could focus on development. For example, I produced scripts for the developers so that manual processes would be automated. The project manager and I met together with the customer regularly to collect requirements from the customer before each release. I also suggested features to KONE and many of the suggestions were implemented and appreciated by KONE. I introduced CI/CD to the team to improve the quality of new version releases. I also helped the developers by making diagrams of the architecture so that the developers could more easily develop new functions. SET is used today by KONE Sweden and KONE Norway, and KONE is so satisfied that it is also Denmark's turn to use the system.",
        "tech": {
          "server": [
            "ASP.NET 4.7",
            "ASP.NET Core",
            "ASP.NET Web API",
            "ASP.NET Core MVC",
            "Entity Framework",
            "SQL",
            "LINQ",
            "Autofac",
            "NuGet",
            "REST API"
          ],
          "client": [
            "TypeScript",
            "Angular",
            "Material Design",
            "Flex Layout",
            "NPM",
            "HTML",
            "SCSS",
            "Visual Studio Code",
            "E2E test Protractor",
            "Jasmin"
          ],
          "environment": [
            "Azure",
            "Azure SQL",
            "Azure App Service",
            "Azure Logic Apps",
            "Azure Search",
            "Azure AD",
            "Azure Storage",
            "Visual Studio 2019"
          ],
          "devops": [
            "AppVeyor",
            "Bitbucket (Git)",
            "PowerShell (deploy, DevOps)",
            "Angular CLI (Webpack)"
          ]
        }
      },
      {
        "title": "Symbrio (Consulting via Spree)",
        "icon": "/symbrio.svg",
        "period": {
          "from": "2016-11-01T00:00:00Z",
          "to": "2018-03-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Stockholm",
        "description": "Symbrio is a company that develops invoicing systems for the construction industry. Both companies that are buyers and retailers/suppliers are customers of Symbrio and use the system. My role was to step in as a frontend consultant to improve Symbrio's user interface. The lift was done with technical help from Angular and configuring CI/CD for Angular in Jenkins. I worked closely with other backend developers and UX/UI to tie the new design and flow together with the backend. I also spread knowledge about Angular within the team. The graphic designer and I had a close dialogue about the possibilities, and I came up with suggestions for improvements in the interface. The team I worked with consisted of 7 developers, 1 designer and 2 testers. The team was divided according to requirements/functions and then depending on the requirements, I could work with 1 - 2 developers and 1 tester. I also had a workshop with Symbrio's developers where we built a warning light when a build step in Jenkins failed. We used NodeMCU which controlled relays. The small workshop was really appreciated by the Symbrio developers.",
        "tech": {
          "server": [
            "C#",
            "Web API ASP.NET",
            "WebSockets",
            "NHibernate",
            "SQL"
          ],
          "client": [
            "TypeScript",
            "JavaScript",
            "Angular",
            "AngularJS (fasades ut)",
            "HTML",
            "CSS",
            "Bootstrap",
            "LESS",
            "Webforms (moving away to Angular)"
          ],
          "environment": [
            "IIS",
            "Windows Server 2012",
            "SQL Server 2012",
            "Visual Studio 2017",
            "Visual Studio Code",
            "TFS",
            "NPM"
          ],
          "devops": ["Jenkins", "TFS", "Angular CLI", "Webpack"]
        }
      },
      {
        "title": "Logivia/Visma (Consulting via Spree)",
        "icon": "/visma.svg",
        "period": {
          "from": "2015-09-01T00:00:00Z",
          "to": "2016-11-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Stockholm",
        "description": "Logivia is an IT company that develops logistics systems which has a collaboration with Visma. The system handles orders for transports and with the help of the system the customer can speed up their planning of transports. The system can plan and optimize runs/pickups and display these in real time and warn if something goes wrong. The team I worked with consisted of 4 developers, 1 tester and a project manager. I had to develop several different parts of the system in the whole stack from database to HTML and JavaScript where I also had to develop components for the user interface. I was support especially for the frontend development where I shared knowledge with the others. Since there was no design or flow, I came up with suggestions that I implemented myself.",
        "tech": {
          "server": [
            "MVC 5 .NET C#",
            "Entity Framework 6",
            "WCF",
            "Web Services"
          ],
          "client": [
            "JavaScript",
            "Knockout.js",
            "HTML",
            "CSS",
            "Bootstrap",
            "LESS"
          ],
          "environment": [
            "IIS",
            "Windows Server 2012",
            "SQL server 2012",
            "Visual Studio 2013",
            "TFS"
          ]
        }
      },
      {
        "title": "Klustr (inhouse project at Spree)",
        "icon": null,
        "period": {
          "from": "2015-01-01T00:00:00Z",
          "to": "2015-08-01T00:00:00Z"
        },
        "role": "Backendutvecklare",
        "location": "Stockholm",
        "description": "My role in the project was to run and plan backend development. The backend consisted of a REST API that the Klustr app (iOS and Android) communicated with. Being the only backend developer, I took a lot of responsibility and planned the work together with the other two app developers. The team consisted of 2 app developers, 1 tester and together with me as backend developer we developed the Klustr app. The backend also consisted of the Cloud Service that updated the users' data and communicated via Service Bus to Azure App Service. I chose this split so heavy/long running task would run in Cloud Service to offload Azure App Service which would only handle API calls. I developed parts of that architecture.",
        "tech": {
          "server": ["Web API 2 .NET", "C#", "OAuth", "Entity Framework 6"],
          "client": [],
          "environment": [
            "Visual Studio 2015",
            "Azure Web app",
            "Azure Cloud Service",
            "Azure Service Bus",
            "Azure Storage",
            "Azure SQL Server",
            "MSTest"
          ],
          "devops": ["SVN", "TeamCity"]
        }
      },
      {
        "title": "Flygstolar.se/ATE (inhouse at M-Bition)",
        "icon": "/flygstolar.png",
        "period": {
          "from": "2014-01-01T00:00:00Z",
          "to": "2014-12-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Stockholm",
        "description": "When I worked at M-bition, which owned the service ATE and flygstolar.se, I worked on further developing ATE, which is a price comparison engine for air travel and hotels. ATE was thus a SaaS service used by other partners as well. ATE collects prices from several travel agencies and compiles the data to then be presented by a travel site that uses ATE. Users can then search for the cheapest flight or hotel price from the travel agency the customer prefers. My role was to further develop the hotel search service and add new travel agencies to the price comparison engine. I also made improvements in the architecture to be able to add more travel agencies more easily.",
        "tech": {
          "server": [
            "MVC 3 .NET",
            "C#",
            "Web Forms",
            "WCF",
            "Web Services",
            "ETL"
          ],
          "client": ["JavaScript", "CSS", "Knockout.js", "Bootstrap", "HTML"],
          "environment": [
            "IIS",
            "Windows Server 2008",
            "Windows Server 2012",
            "SQL Server 2008",
            "Visual Studio 2012",
            "SVN"
          ],
          "devops": []
        }
      },
      {
        "title": "Tele2 (Consulting via M-Bition)",
        "icon": "/Tele2_logo.svg",
        "period": {
          "from": "2011-12-01T00:00:00Z",
          "to": "2014-01-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Stockholm",
        "description": "I worked in a SCRUM team with about 20 people divided into frontend and backend teams. My task was to support the frontend team with developing and maintaining the web shop written in C# with ASP.NET Web Forms. TeamCity was used to build, deploy and run tests for the frontend. I worked closely with the marketing department where I took personal responsibility and communicated clearly with them, so the results were as expected. I also worked with the configuration of different types of servers and trained colleagues how to configure these. I suggested replacing jQuery with AngularJS to simplify development of the interface and increase the possibilities, which was done with good results.",
        "tech": {
          "server": ["ASP .NET", "C#", "OpenText CMS"],
          "client": ["JavaScript", "HTML", "CSS", "jQuery", "AngularJS"],
          "environment": [
            "IIS",
            "Linux",
            "SVN",
            "Git",
            "Windows Server",
            "Visual Studio 2010",
            "TeamCity",
            "REHL",
            "Apache HTTP Server",
            "Memcached",
            "PHP",
            "MySQL",
            "Magento"
          ],
          "devops": []
        }
      },
      {
        "title": "Bahnhof (Konsult via Netlight)",
        "icon": "/bahnhof.svg",
        "period": {
          "from": "2011-06-01T00:00:00Z",
          "to": "2011-12-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Stockholm",
        "description": "I worked on expanding Bahnhof‚Äôs administration system for telephone exchanges. My role was to integrate with SNPAC's API so that Bahnhof's administration system could carry out porting of telephone numbers more easily. Unfortunately, I did not finish that assignment and handed it over to a colleague who completed the integration. I laid the foundation for the integration, and it was easy for the colleague to take over and complete the work.",
        "tech": {
          "server": ["Java", "Ruby on Rails"],
          "client": ["JavaScript", "CSS", "HTML"],
          "environment": ["Linux", "SVN", "Git", "Vim", "RubyMine"],
          "devops": []
        }
      },
      {
        "title": "SCM Ventures (Consulting via Netlight)",
        "icon": "/blocket.svg",
        "period": {
          "from": "2011-04-01T00:00:00Z",
          "to": "2011-06-01T00:00:00Z"
        },
        "role": "Frontend developer",
        "location": "Stockholm",
        "description": "SCM Ventures is part of blocket.se but more aimed towards the international market. My role was as a web developer to develop HTML, CSS, JavaScript for \"feature phones\" (older phones). The goal was to get a simple version of blocket.se out for the Indian market. SCM Ventures did not know what limitations existed in \"feature phones\", so I solved the challenge by finding statistics for the phones that were most common in India and installing and documenting emulators for these. This work could be used to further develop for other countries where these emulators were needed. I worked independently in this role but communicated with other developers within SCM Ventures.",
        "tech": {
          "server": ["PHP", "Blocket Templating"],
          "client": ["JavaScript", "CSS", "HTML"],
          "environment": ["Linux", "Bazar versionshantering", "Vim"],
          "devops": []
        }
      },
      {
        "title": "Media Norge Digital (Consulting via Netlight)",
        "icon": "/schibsted-logo-vector-xs.png",
        "period": {
          "from": "2010-10-01T00:00:00Z",
          "to": "2011-04-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Oslo",
        "description": "I lived and consulted in Oslo for about 8 months because I got an assignment at Media Norge digital. MNO is part of Schibsted's Digital departments where the development of Schibsted's newspapers in Norway is run (aftenposten.no, bt.no, aftenbladet.no and others). My role was to help develop new versions of these sites. The team I worked in realized that by developing a common front-end framework for all newspapers, they would save a lot of time. I was involved in developing the framework together with MNO's developers. bt.no first launched with the framework and then continued with Aftenposten and Aftenbladet. The framework that was developed made it much easier for the remaining newspapers to switch to the new CMS Escenic. I worked according to SCRUM with 3 frontend developers and 5 other backend developers. ",
        "tech": {
          "server": ["JSP", "Escenic"],
          "client": ["JavaScript", "HTML", "CSS", "jQuery", "require.js"],
          "environment": ["Linux Debian", "Tomcat", "Intellij IDE", "SVN"],
          "devops": []
        }
      },
      {
        "title": "TELE2/COMVIQ (Konsult via Done Interactive)",
        "icon": "/comviq.png",
        "period": {
          "from": "2009-10-01T00:00:00Z",
          "to": "2010-10-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Stockholm",
        "description": "I worked as a consultant at TELE2/COMVIQ where I had to support COMVIQ's team. My role was to develop features that the marketing department prioritized. For example. Top up prepaid card function with integration to a payment solution to make it easier for COMVIQ customers to top up prepaid cards via the web. I also was as extra support and helped develop the TELE2 business shop. I got to work in a SCRUM team of 10 people with daily stand-up‚Äôs and retros. I also had to develop the backend and frontend architecture for COMVIQ's new site, which was written in .NET and JavaScript.",
        "tech": {
          "server": ["ASP. NET", "C#", "Web Services", "LiveServer"],
          "client": ["jQuery", "AJAX", "JavaScript", "JSON", "HTML", "CSS"],
          "environment": [
            "Linux",
            "OpenText Reddot (CMS)",
            "Windows Server 2008",
            "IIS",
            "Apache Tomcat (LiveServer)",
            "Visual Studio 2010",
            "SVN"
          ],
          "devops": []
        }
      },
      {
        "title": "Done Interactive",
        "icon": null,
        "period": {
          "from": "2009-08-01T00:00:00Z",
          "to": "2010-10-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Stockholm",
        "description": "I worked as a full stack developer at Done Interactive. I worked with developing campaigns and company sites and systems for clients. Including customers such as COMVIQ, Blossa, Eurosport and other well-known brands. The clients I worked with appreciated my speed and communication.",
        "tech": {
          "server": ["ASP .NET", "C#", "SQL", "PHP", "Web Services"],
          "client": ["jQuery", "AJAX", "JavaScript", "JSON", "HTML", "CSS"],
          "environment": [
            "IIS",
            "Windows",
            "Visual Studio 2008",
            "SQL Server 2008",
            "Adobe Photoshop",
            "SVN"
          ],
          "devops": []
        }
      },
      {
        "title": "Fastcheck",
        "icon": null,
        "period": {
          "from": "2008-04-01T00:00:00Z",
          "to": "2009-08-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Stockholm",
        "description": "Fastcheck is a company that provides travel guides in PDF format for download. My role was to integrate partner sites with Fastcheck's download system and develop Fastcheck‚Äôs site. I also developed a new integration method that made it easier for non-technical staff to create new integration for partners in a short time so that the travel guides could be distributed more quickly.",
        "tech": {
          "server": [],
          "client": [],
          "environment": [],
          "devops": []
        }
      },
      {
        "title": "Hewlett Packard (Praktik via Tongji University)",
        "icon": "/hp-hewlett-packard.svg",
        "period": {
          "from": "2008-01-01T00:00:00Z",
          "to": "2008-06-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Shanghai",
        "description": "I lived in Shanghai and interned at HP for 5 months via Tongji University where I was an exchange student. I helped develop an error reporting system used internally when hardware broke or did not work. I worked in a team of 3 people, which meant a lot of personal responsibility. I also ran a course in JavaScript for my colleagues who wanted to learn more about frontend development.",
        "tech": {
          "server": [],
          "client": [],
          "environment": [],
          "devops": []
        }
      }
    ]
  },
  "sv": {
    "role": "Frilansande Fullstackutvecklare/Arkitekt",
    "aboutMe": "Jag √§r systemarkitekt med b√•de backend och frontend erfarenhet. Jag b√∂rjade jobba som utvecklare 2008 och har jobbat inom olika branscher och i olika l√§nder. Mitt intresse f√∂r datorer och programmering b√∂rjade i tidig √•lder. Jag √§r en kreativ utvecklare som inte bara kodar utan vill vara med och skapa produkten som jag utvecklar. Mina styrkor ligger i min f√∂rm√•ga att kommunicera med andra utvecklare och kunder/kravst√§llare. Jag √§r mycket driven, analytisk och positivt lagd. Jag √§r social och har l√§tt f√∂r att knyta kontakter. Jag har l√§tt f√∂r att l√§ra mig nya tekniker och metoder f√∂r att l√∂sa uppgifter. Jag tycker att det √§r kul att sprida min kunskap men ocks√• bra p√• att lyssna och ta in ny kunskap.",
    "experince": [
      {
        "title": "Safeline",
        "icon": "/safeline.png",
        "period": {
          "from": "2023-01-10T00:00:00Z",
          "to": null
        },
        "role": "Backendutvecklare/Arkitekt",
        "location": "Tyres√∂/Stockholm",
        "description": "SafeLine utvecklar och tillverkar hissprodukter s√• som hisstelefoner, styrsystem och ers√§ttningsprodukter f√∂r reparation av hissar. SafeLine utvecklar ocks√• system f√∂r att √∂vervaka hissar d√§r deras IoT produkter kan rapportera hissens r√∂relse, d√∂rr√∂ppningar och andra h√§ndelser som r√∂r hissen. Min roll p√• SafeLine som backendutvecklare √§r att forts√§tta bygga vidare p√• Orion som √§r systemet som tar emot data fr√•n alla deras IoT produkter. Systemet arkitektur √§r byggt med Azure Eventhub som str√∂mmar event till alla mikrotj√§nster. Mikrotj√§nsterna i sin tur producerar events som kan konsumeras av andra mikrotj√§nster. Arkitektur √§r byggd s√• tj√§nsterna √§r v√§ldigt l√∂st kopplade och g√∂r det enkelt att sl√§ppa nya versioner av mikrotj√§nsterna. Jag har bidragit med att f√∂renkla arkitekturen med dom delar jag har jobbat med. Jag har ocks√• f√∂rb√§ttrat CI/CD processer f√∂r b√•de backend och frontend. Mitt dagliga arbete har varit att kommunicera med produkt√§gare, frontend utvecklare f√∂r att ta fram bra l√∂sningar.",
        "tech": {
          "server": [
            "Microservices",
            "C#",
            "ASP.NET 6,7",
            "MongoDB (Mongodb driver)",
            "SQL (Postgres)",
            "xUnit.NET",
            "Swashbuckle (Swagger)",
            "REST API"
          ],
          "client": [],
          "environment": [
            "Azure",
            "Azure Cosmos DB (mongodb api)",
            "Docker",
            "Azure Kubernetes",
            "Azure EventHub",
            "Timescale (Postgres for timeseries)",
            "Azure Service Bus"
          ],
          "devops": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases",
            "Kubernetes",
            "Velero (Backup)"
          ]
        }
      },
      {
        "title": "Charge Amps",
        "icon": "/logo-charge-amps-large.png",
        "period": {
          "from": "2022-02-01T00:00:00Z",
          "to": "2023-12-23T00:00:00Z"
        },
        "role": "Backendutvecklare",
        "location": "Stockholm",
        "description": "Charge Amps g√∂r laddboxar till elbilar/laddhybrider. Olika team ansvarade f√∂r olika delar av Charge Amps molntj√§nst. Jag var i ett team som utvecklade OCPP server men jag bidrog till flera team. Min roll var att utveckla OCPP server som f√∂ljer OCPP standarden f√∂r kommunikation mellan moln och laddbox. D√§r ing√•r bland annat att styra str√∂mstyrkan under laddning. Balansera laddning mellan √∂vrig f√∂rbrukning s√• s√§kringar inte g√•r. Jag bidrog med min kunskap inom mikrotj√§nstarkitektur, enhetstestning, integrations testning. Jag satte upp nya mikrotj√§nster fr√•n grunden skrivna i .NET med Helm Charts deployade p√• Kubernetes. Jag l√§rde mig √§ven nytt ramverk kallat Proto.Actor som √§r ett s√§tt utveckla applikationer distribuerat efter aktormodellen. OCPP server var utvecklat med Proto.Actor ramverket som gjorde det m√∂jligt att skala till 100 000 laddboxar samtidigt utan problem.",
        "tech": {
          "server": [
            "Microservices",
            "C#",
            "ASP.NET 6",
            "Proto.Actor",
            "Dapper",
            "SQL",
            "xUnit.NET",
            "Swashbuckle (Swagger)",
            "REST API",
            "MassTransit"
          ],
          "client": [],
          "environment": [
            "Azure",
            "Azure SQL",
            "Docker",
            "Azure Kubernetes",
            "Azure Redis",
            "RabbitMQ",
            "Kafka",
            "Azure Cosmos DB"
          ],
          "devops": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases",
            "Kubernetes",
            "Helm",
            "Grafana",
            "Loki",
            "Tempo",
            "Prometheus"
          ]
        }
      },
      {
        "title": "Klara consulting (Konsult via Spree)",
        "icon": "/KC_logo_Black_payoff.svg",
        "period": {
          "from": "2021-01-01T00:00:00Z",
          "to": "2022-02-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare/Arkitekt",
        "location": "Stockholm",
        "description": "Klara Consulting hade utvecklat en portal √•t sina kunder men saknade dokumentdelning mot sina kunder. Klara Consulting anv√§nde Sharepoint ut mot sina kunder men det var inte optimalt. Jag och UX fick rollen att ta reda p√• vad kraven var och vilken funktionalitet som fanns. UX tog fram design i Figma och tillsammans med anv√§ndarna tog jag och UX fram kraven. Det befintliga systemet k√∂rdes i Kubernetes men var utvecklat som en monolit. Jag tog fram en mikrotj√§nstarkitektur d√§r olika mikrotj√§nster ansvarade f√∂r aff√§rsfunktioner. Jag gjorde √§ven en tj√§nst som hanterade Sharepoint p√• ett enkelt s√§tt. Vilket m√∂jliggjorde en dokumentdelning baserad p√• Office 365 f√∂r externa parter utan att man faktiskt anv√§nde SharePoint. Jag satte √§ven upp CI/CD med Azure DevOps och Helm Charts.",
        "tech": {
          "server": [
            "Microservices",
            "Event driven",
            "C#",
            "ASP.NET 5",
            "Entity Framework Core",
            "SQL",
            "MSTest",
            "Swashbuckle (Swagger)",
            "REST API",
            "Microsoft Graph API",
            "MSAL"
          ],
          "client": [
            "TypeScript",
            "Angular",
            "HTML",
            "SCSS",
            "Tailwind CSS",
            "Visual Studio Code"
          ],
          "environment": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases",
            "Kubernetes",
            "Helm",
            "Terraform"
          ],
          "devops": [
            "Docker",
            "Azure Kubernetes",
            "Azure Kubernetes",
            "Azure Redis",
            "Azure SQL",
            "Azure Service Bus",
            "RabbitMQ (lokal utv)",
            "Bridge to Kubernetes"
          ]
        }
      },
      {
        "title": "Klarna (In-house Spree)",
        "icon": "/klarna.svg",
        "period": {
          "from": "2021-05-01T00:00:00Z",
          "to": "2021-11-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare/Arkitekt",
        "location": "Stockholm",
        "description": "Spree fick i uppdrag att lansera ett spel √•t Klarna som skulle anv√§nds internt f√∂r deras supportavdelning. Det var ett webbaserat spel skrivet i Unity. Min roll var att ta fram en arkitektur f√∂r backend som skulle hantera anv√§ndare och resultat under spelets g√•ng. Anv√§ndare loggades in via Azure Active Directory B2C sedan skickades man in i spelet i webbl√§saren. Jag ansvarade √§ven att backend kunde hantera stora m√§ngden anst√§llda fr√•n olika delar av v√§rlden som skulle spela samtidigt. Jag anv√§nde mig av Azure CDN f√∂r att kunna leverera spelet p√• ca 200-300Mb till alla anv√§ndare utan att belasta faktiska servern med spelet. Jag utvecklade √§ven en styrning av spelet s√• det gick att g√∂ra ‚Äùevent‚Äù av spelet s√• alla kunde komma in i spelet samtidigt vilket kunden beh√∂vde.",
        "tech": {
          "server": [
            "C# ASP.NET 5",
            "Azure Cosmos DB",
            "Swashbuckle (Swagger)",
            "REST API",
            "Docker",
            "MSAL"
          ],
          "client": [
            "Angular",
            "TypeScript",
            "HTML",
            "SCSS",
            "Visual Studio Code"
          ],
          "environment": [
            "Azure",
            "Azure Cosmos DB",
            "Azure CDN",
            "Azure Active Directory B2C",
            "Lasttestning (https://loadster.app/)"
          ],
          "devops": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases"
          ]
        }
      },
      {
        "title": "MTR (Konsult via Spree)",
        "icon": "/mtr.png",
        "period": {
          "from": "2020-11-01T00:00:00Z",
          "to": "2021-01-31T00:00:00Z"
        },
        "role": "Backendutvecklare",
        "location": "Stockholm",
        "description": "MTR Beh√∂vde hj√§lp med f√∂rvaltning och nyutveckling. Jag gick in som backendutvecklare men ocks√• som extra st√∂d √•t frontend. Jag bidrog med kunskap i hur man kan skriva kod som √§r enkel att enhets testa i backend. Jag delade med mig av min erfarenhet och kunskap med teamet p√• distans via teams och p√• plats. Jag granskade b√•de backend och frontend kod vid pull request. Jag satte √§ven upp Azure SignalR och implementerade det i backend och visade f√∂r frontend utvecklarna hur man kunde anv√§nda det. Jag hade ocks√• t√§tt samarbete med testaren s√• buggar l√∂stes snabbt. Jag gav f√∂rslag p√• f√∂rb√§ttringar f√∂r Azure Devops pipelines och automatisk uppdatering av APIM vilket jag implementerade.",
        "tech": {
          "server": [
            "C#",
            "ASP.NET 5",
            "Entity Framework Core",
            ".NET Core IoC",
            "NuGet",
            "SQL",
            "MSTest",
            "Swashbuckle (Swagger)",
            "REST API"
          ],
          "client": [
            "Angular",
            "TypeScript",
            "HTML",
            "SCSS",
            "Visual Studio Code"
          ],
          "environment": [
            "Docker, Azure Kubernetes",
            "Azure API Managment",
            "Cosmos DB",
            "Azure SignalR"
          ],
          "devops": [
            "Azure DevOps",
            "Azure Container Registry",
            "GIT",
            "Azure Pipelines/Releases"
          ]
        }
      },
      {
        "title": "World Expo 2020 (in-house Spree)",
        "icon": "/Expo-2020-logo.png",
        "period": {
          "from": "2020-01-01T00:00:00Z",
          "to": "2021-08-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare/Arkitekt",
        "location": "Stockholm",
        "description": "World Expo 2020 √§r en utst√§llning som skulle h√•llas i Dubai 2020 (uppskjuten till 2021 p.g.a. covid-19) d√§r l√§nder visar upp den senaste inom teknik, utveckling, forskning o.s.v. Spree fick i uppdrag att utveckla en del av Sveriges utst√§llning. Spree tog fram interaktiva l√∂sningar i Unity och webb som skulle presentera Sverige och f√∂retagen som √§r utst√§llare. Min roll i projektet var att utveckla ett webbaserat CMS som passade tekniskt de interaktiva Unity-stationerna och att ta fram en webapplikation f√∂r guiderna i utst√§llningen. Jag jobbade i ett team p√• 10 personer d√§r min roll var fullstackutvecklare och ansvarig f√∂r att Unity-utvecklarna enkelt kunde integrera mot CMS:et. Jag hade m√∂te med utvecklarna dagligen f√∂r att st√∂tta dom tekniskt. Jag s√•g till att CMS:et var enkelt att anv√§nda f√∂r expopartners och jag tog √§ven fram hur gr√§nssnittet skulle ut. Jag skissade p√• hur hela arkitekturen och integrationen skulle se ut mellan CMS och alla applikationer. Jag v√•r ocks√• ansvarig att utveckla en progressive web app f√∂r guiderna som skulle hj√§lpa bes√∂karna.",
        "tech": {
          "server": [
            "C#",
            "ASP.NET Core 3.1",
            "Entity Framework Core",
            "SQL",
            "LINQ",
            ".NET Core IoC",
            "NuGet",
            "NUnit",
            "Swashbuckle (Swagger)",
            "REST API"
          ],
          "client": [
            "TypeScript",
            "Angular",
            "Material Design",
            "Flex Layout",
            "NPM",
            "HTML",
            "SCSS",
            "Visual Studio Code",
            "React",
            "Redux",
            "React Router"
          ],
          "environment": [
            "Nginx",
            "Azure",
            "Azure SQL",
            "Azure App Service (Docker container), Docker Container"
          ],
          "devops": [
            "Bitbucket (Git)",
            "Docker hub",
            "Docker Container",
            "WSL 2",
            "Docker Compose (f√∂r utveckling)"
          ]
        }
      },
      {
        "title": "Kone (in-house Spree)",
        "icon": "/KONE.svg",
        "period": {
          "from": "2018-03-01T00:00:00Z",
          "to": "2020-02-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare/Arkitekt",
        "location": "Stockholm",
        "description": "Kone beh√∂vde ett verktyg f√∂r att st√∂dja verksamheten fr√•n s√§lj till en f√§rdig hiss. Jag hj√§lpte Kone att vidareutveckla verktyget SET (Sales and Engineering Tool). Syftet med systemet √§r att f√∂renkla och v√§gleda olika roller i Kone genom processen fr√•n s√§lj till ett bygge av en hiss. Kraven var inte spikade utan togs fram under utveckling med mig och kunden tillsammans och sl√§pptes l√∂pande. Min roll var att utveckla systemet och att leda ett team p√• 3 utvecklare d√§r jag planerade sprintar med en UX/ Projektledare med t√§ta releaser p√• ca 2 - 4 veckor. Jag avlastade utvecklarna fr√•n DevOps bitarna s√• utvecklarna kunde fokusera p√• utveckling. Tex s√• tog Jag fram script f√∂r utvecklarna s√• manuellt processer skulle automatiseras. Jag och projektledaren hade tillsammans m√∂te med kund regelbundet f√∂r att samla in krav fr√•n kunden inf√∂r varje release. Jag gav ocks√• f√∂rslag p√• funktioner till Kone och m√•nga av f√∂rslagen implementerades och uppskattades av Kone. Jag introducerade CI/CD f√∂r teamet f√∂r att f√∂rb√§ttra kvalit√©n av nya versions sl√§pp. Jag hj√§lpte √§ven utvecklarna genom att g√∂ra skisser p√• arkitekturen s√• utvecklarna enklare kunde utveckla nya funktioner. SET anv√§nds idag av Kone Sverige och Kone Norge och Kone √§r s√• pass n√∂jda att det √§ven Danmark st√•r p√• tur att f√• anv√§nda systemet.",
        "tech": {
          "server": [
            "ASP.NET 4.7",
            "ASP.NET Core",
            "ASP.NET Web API",
            "ASP.NET Core MVC",
            "Entity Framework",
            "SQL",
            "LINQ",
            "Autofac",
            "NuGet",
            "REST API"
          ],
          "client": [
            "TypeScript",
            "Angular",
            "Material Design",
            "Flex Layout",
            "NPM",
            "HTML",
            "SCSS",
            "Visual Studio Code",
            "E2E test Protractor",
            "Jasmin"
          ],
          "environment": [
            "Azure",
            "Azure SQL",
            "Azure App Service",
            "Azure Logic Apps",
            "Azure Search",
            "Azure AD",
            "Azure Storage",
            "Visual Studio 2019"
          ],
          "devops": [
            "AppVeyor",
            "Bitbucket (Git)",
            "PowerShell (deploy, DevOps)",
            "Angular CLI (Webpack)"
          ]
        }
      },
      {
        "title": "Symbrio (Konsult via Spree)",
        "icon": "/symbrio.svg",
        "period": {
          "from": "2016-11-01T00:00:00Z",
          "to": "2018-03-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Stockholm",
        "description": "Symbrio √§r ett f√∂retag som utvecklar faktureringssystem f√∂r byggbranschen. B√•de f√∂retag som √§r ink√∂pare och √•terf√∂rs√§ljare/leverant√∂rer √§r kunder hos Symbrio och anv√§nder systemet. Min roll var att g√• in som frontend konsult f√∂r att lyfta Symbrios anv√§ndargr√§nssnit. Lyftet gjordes med teknisk hj√§lp av Angular och konfigurering av CI/CD f√∂r Angular i Jenkins. Jag jobbade t√§tt med andra backendutvecklare och en grafiskdesigner f√∂r att knyta ihop den nya designen och fl√∂det med backend. Jag spred √§ven kunskap om Angular inom teamet. Jag och den grafiska designern hade t√§t dialog om m√∂jligheterna och jag kom med f√∂rslag p√• f√∂rb√§ttringar i gr√§nssnittet. Teamet jag jobbade med bestod av 7 utvecklare, 1 designer och 2 testare. Teamet delades upp efter krav/funktioner och d√• beroende p√• krav s√• kunde jag jobba med 1 - 2 utvecklare och 1 testare. Jag hade √§ven en workshop med Symbrios utvecklare d√§r vi byggde en varningslampa n√§r n√•got byggsteg i Jenkins misslyckades. Vi anv√§nde sig av NodeMCU som styrde rel√§n. Den lilla workshopen uppskattades verkligen av Symbrios utvecklare.",
        "tech": {
          "server": [
            "C#",
            "Web API ASP.NET",
            "WebSockets",
            "NHibernate",
            "SQL"
          ],
          "client": [
            "TypeScript",
            "JavaScript",
            "Angular",
            "AngularJS (fasades ut)",
            "HTML",
            "CSS",
            "Bootstrap",
            "LESS",
            "Webforms (fasades ut mot angular)"
          ],
          "environment": [
            "IIS",
            "Windows Server 2012",
            "SQL Server 2012",
            "Visual Studio 2017",
            "Visual Studio Code",
            "TFS",
            "NPM"
          ],
          "devops": ["Jenkins", "TFS", "Angular CLI", "Webpack"]
        }
      },
      {
        "title": "Logivia/Visma (Konsult via Spree)",
        "icon": "/visma.svg",
        "period": {
          "from": "2015-09-01T00:00:00Z",
          "to": "2016-11-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Stockholm",
        "description": "Logivia √§r ett IT bolag som utvecklar logistiksystem och har ett samarbete med Visma. Systemet hanterar best√§llningar av transporter och med hj√§lp av systemet ska kunden snabba upp sin planering av transporter. Systemet kan planera och optimera k√∂rningar/h√§mtningar och √§ven visa dessa i realtid och varna om n√•got g√•r snett. Teamet jag jobbade med bestod av 4 utvecklare, 1 testare och en projektledare. Jag fick utveckla flera olika delar av systemet i hela stacken fr√•n databas till HTML och JavaScript d√§r jag √§ven fick ta fram komponenter f√∂r anv√§ndargr√§nssnittet. Jag var st√∂d speciellt f√∂r frontendutvecklingen d√§r jag delade med mig av kunskap till det andra. Eftersom design eller fl√∂de inte fanns tog jag fram f√∂rslag som jag sj√§lv implementerade.",
        "tech": {
          "server": [
            "MVC 5 .NET C#",
            "Entity Framework 6",
            "WCF",
            "Web Services"
          ],
          "client": [
            "JavaScript",
            "Knockout.js",
            "HTML",
            "CSS",
            "Bootstrap",
            "LESS"
          ],
          "environment": [
            "IIS",
            "Windows Server 2012",
            "SQL server 2012",
            "Visual Studio 2013",
            "TFS"
          ]
        }
      },
      {
        "title": "Klustr (inhouse projekt Spree)",
        "icon": null,
        "period": {
          "from": "2015-01-01T00:00:00Z",
          "to": "2015-08-01T00:00:00Z"
        },
        "role": "Backendutvecklare",
        "location": "Stockholm",
        "description": "Min roll i projektet var att driva och planera beckendutveckling. Backend bestod av ett REST API som Klustr appen (iOS och Android) kommunicerade med. Eftersom jag var den enda backendutvecklare tog jag mycket ansvar och planerade sitt arbete tillsammans med de andra tv√• apputvecklarna. Teamet bestod i 2 apputvecklare, 1 testare och tillsammans med mig som backendutvecklare tog vi fram Klustr appen. Backend bestod ocks√• av Cloud Service som k√∂rde uppdatering av anv√§ndarnas data och kommunicerade via Service Bus till Azure App Service. Jag valde denna uppdelning s√• tunga k√∂rningar skulle k√∂ras i Cloud Service f√∂r att lasta av Azure App Service som endast skulle hantera API anrop. Jag tog fram delar av den arkitekturen.",
        "tech": {
          "server": ["Web API 2 .NET", "C#", "OAuth", "Entity Framework 6"],
          "client": [],
          "environment": [
            "Visual Studio 2015",
            "Azure Web app",
            "Azure Cloud Service",
            "Azure Service Bus",
            "Azure Storage",
            "Azure SQL Server",
            "MSTest"
          ],
          "devops": ["SVN", "TeamCity"]
        }
      },
      {
        "title": "Flygstolar.se/ATE (inhouse p√• M-Bition)",
        "icon": "/flygstolar.png",
        "period": {
          "from": "2014-01-01T00:00:00Z",
          "to": "2014-12-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Stockholm",
        "description": "N√§r jag jobbade p√• M-bition som √§gde tj√§nsten ATE och flygstolar.se s√• jobbade jag med att vidareutveckla ATE som √§r en prisj√§mf√∂relsemotor f√∂r flygresor och hotell. ATE var allts√• en SaaS-tj√§nst som anv√§ndes av andra sajter. ATE h√§mtar in priser fr√•n flera resebyr√•er och sammanst√§ller data f√∂r att sedan kunna presenteras av en resesajt som anv√§nder ATE. Anv√§ndare kan d√• s√∂ka efter det billigaste flyg eller hotellpriset fr√•n den resebyr√• kunden f√∂redrar. Min roll var att vidareutveckla tj√§nsten med hotells√∂k och l√§gga in nya resebyr√•er i prisj√§mf√∂relsemotorn. Jag gjorde √§ven f√∂rb√§ttringar i arkitekturen f√∂r att enklare kunna l√§gga in fler resebyr√•er.",
        "tech": {
          "server": [
            "MVC 3 .NET",
            "C#",
            "Web Forms",
            "WCF",
            "Web Services",
            "ETL"
          ],
          "client": ["JavaScript", "CSS", "Knockout.js", "Bootstrap", "HTML"],
          "environment": [
            "IIS",
            "Windows Server 2008",
            "Windows Server 2012",
            "SQL Server 2008",
            "Visual Studio 2012",
            "SVN"
          ],
          "devops": []
        }
      },
      {
        "title": "Tele2 (Konsult via M-Bition)",
        "icon": "/Tele2_logo.svg",
        "period": {
          "from": "2011-12-01T00:00:00Z",
          "to": "2014-01-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Stockholm",
        "description": "Jag arbetade i ett SCRUM team med cirka 20 personer uppdelade i front och backend team. Min uppgift var att st√∂dja frontend teamet med att utveckla och underh√•lla webbutiken skriven i C# med ASP.NET Web Forms. TeamCity anv√§ndes f√∂r att bygga, deploya och k√∂ra tester f√∂r frontend. Jag jobbade t√§tt med marknadsavdelning d√§r jag tog eget ansvar och kommunicerade tydligt med marknad s√• resultat blev som f√∂rv√§ntat. Jag jobbade ocks√• med konfiguration av olika typer av servrar och utbildade kollegor hur man konfigurerar dessa. Jag gav f√∂rslag att byta ut jQuery mot AngularJS f√∂r att f√∂renkla utveckling av gr√§nssnittet och √∂ka p√• m√∂jligheterna vilket gjordes med gott resultat.",
        "tech": {
          "server": ["ASP .NET", "C#", "OpenText CMS"],
          "client": ["JavaScript", "HTML", "CSS", "jQuery", "AngularJS"],
          "environment": [
            "IIS",
            "Linux",
            "SVN",
            "Git",
            "Windows Server",
            "Visual Studio 2010",
            "TeamCity",
            "REHL",
            "Apache HTTP Server",
            "Memcached",
            "PHP",
            "MySQL",
            "Magento"
          ],
          "devops": []
        }
      },
      {
        "title": "Bahnhof (Konsult via Netlight)",
        "icon": "/bahnhof.svg",
        "period": {
          "from": "2011-06-01T00:00:00Z",
          "to": "2011-12-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Stockholm",
        "description": "Jag jobbade med att bygga ut Bahnhofs administration system f√∂r telefonv√§xlar. Min roll var att integrera mot SNPACs API s√• Bahnhofs administration system skulle kunna utf√∂ra porteringar enklare. Tyv√§rr blev jag inte klar med det uppdraget utan l√§mnade √∂ver den till en kollega som slutf√∂rde integrationen. Jag la grunden f√∂r integrationen och det var enkelt f√∂r kollegan att ta √∂ver och slutf√∂ra arbetet.",
        "tech": {
          "server": ["Java", "Ruby on Rails"],
          "client": ["JavaScript", "CSS", "HTML"],
          "environment": ["Linux", "SVN", "Git", "Vim", "RubyMine"],
          "devops": []
        }
      },
      {
        "title": "SCM Ventures (Konsult via Netlight)",
        "icon": "/blocket.svg",
        "period": {
          "from": "2011-04-01T00:00:00Z",
          "to": "2011-06-01T00:00:00Z"
        },
        "role": "Frontendutvecklare",
        "location": "Stockholm",
        "description": "SCM Ventures √§r en del av blocket.se mot utl√§ndska marknaden.  Min roll var som webbutvecklare att utveckla HTML, CSS, JavaScript f√∂r ‚Äùfeature phones‚Äù (√§ldre telefoner). M√•let var att f√• ut en enkel version av blocket f√∂r indiska marknaden. Blocket visste inte vilka begr√§sningar som fanns i ‚Äùfeature phones‚Äù vilket jag l√∂ste utmaningen genom att hitta statistik f√∂r de telefoner som var vanligast i Indien och att installera och dokumentera emulatorer f√∂r dessa. Detta arbete kunde blocket anv√§nda f√∂r att vidareutveckla i andra l√§nder d√§r dessa emulatorer beh√∂vdes. Jag jobbade sj√§lvst√§ndigt i denna roll men kommunicerade med andra utvecklare inom SCM Ventures.",
        "tech": {
          "server": ["PHP", "Blocket Templating"],
          "client": ["JavaScript", "CSS", "HTML"],
          "environment": ["Linux", "Bazar versionshantering", "Vim"],
          "devops": []
        }
      },
      {
        "title": "Media Norge Digital (Konsult via Netlight)",
        "icon": "/schibsted-logo-vector-xs.png",
        "period": {
          "from": "2010-10-01T00:00:00Z",
          "to": "2011-04-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Oslo",
        "description": "Jag bodde och konsultade i Oslo i ca 8 m√•nader eftersom jag f√•tt ett uppdrag p√• Media Norge digital. MNO √§r en del av Schibsteds Digital avdelningar d√§r utvecklingen av Schibsteds tidningar i Norge drivs (aftenposten.no, bt.no, aftenbladet.no med flera). Min roll var att hj√§lpa till att utveckla nya versioner av dessa sajter. Teamet jag jobbade i ins√•g att genom att utveckla ett gemensamt frontend ramverk f√∂r alla tidningar s√• skulle man spara mycket tid. Jag var med och tog fram ramverket tillsammans med MNOs utvecklare. bt.no lanserade f√∂rst med ramverket f√∂r att sedan forts√§tta med Aftenposten och Aftenbladet. Ramverket som utvecklades gjorde det mycket enklare f√∂r resterande tidningar att g√• √∂ver till nya CMS:et Escenic. Jag jobbade enligt SCRUM med 3 frontend utvecklare och 5 andra backendutvecklare.",
        "tech": {
          "server": ["JSP", "Escenic"],
          "client": ["JavaScript", "HTML", "CSS", "jQuery", "require.js"],
          "environment": ["Linux Debian", "Tomcat", "Intellij IDE", "SVN"],
          "devops": []
        }
      },
      {
        "title": "TELE2/COMVIQ (Konsult via Done Interactive)",
        "icon": "/comviq.png",
        "period": {
          "from": "2009-10-01T00:00:00Z",
          "to": "2010-10-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Stockholm",
        "description": "Jag jobbade som konsult p√• TELE2/COMVIQ d√§r jag fick st√∂dja COMVIQ team. Jags roll var att utveckla funktioner som marknadsavdelningen prioriterade.  T.ex. tanka kontantkortfunktion med integration till en betall√∂sning f√∂r att f√∂renkla f√∂r COMVIQ kunder att fylla p√• kontantkort via webben. Jag hoppade √§ven in som extra st√∂d och hj√§lpte till med att utveckla TELE2 f√∂retagsshopen. Jag fick jobba i ett SCRUM team p√• 10 personer med daily standups och retros. Jag fick ocks√• ta fram backend och frontend arkitekturen f√∂r Comviqs nya sajt som skrevs i .NET och JavaScript.",
        "tech": {
          "server": ["ASP. NET", "C#", "Web Services", "LiveServer"],
          "client": ["jQuery", "AJAX", "JavaScript", "JSON", "HTML", "CSS"],
          "environment": [
            "Linux",
            "OpenText Reddot (CMS)",
            "Windows Server 2008",
            "IIS",
            "Apache Tomcat (LiveServer)",
            "Visual Studio 2010",
            "SVN"
          ],
          "devops": []
        }
      },
      {
        "title": "Done Interactive",
        "icon": null,
        "period": {
          "from": "2009-08-01T00:00:00Z",
          "to": "2010-10-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Stockholm",
        "description": "Jag jobbade som fullstackutvecklare p√• Done Interactive. Jag jobbade med att utveckla kampanj och f√∂retagssajter och system √•t kunder. D√§ribland kunder som Comviq, Blossa, Eurosport och andra k√§nda varum√§rken. Kunderna jag jobbade med uppskattade min snabbhet och kommunikation.",
        "tech": {
          "server": ["ASP .NET", "C#", "SQL", "PHP", "Web Services"],
          "client": ["jQuery", "AJAX", "JavaScript", "JSON", "HTML", "CSS"],
          "environment": [
            "IIS",
            "Windows",
            "Visual Studio 2008",
            "SQL Server 2008",
            "Adobe Photoshop",
            "SVN"
          ],
          "devops": []
        }
      },
      {
        "title": "Fastcheck",
        "icon": null,
        "period": {
          "from": "2008-04-01T00:00:00Z",
          "to": "2009-08-01T00:00:00Z"
        },
        "role": "Fullstackutvecklare",
        "location": "Stockholm",
        "description": "Fastcheck √§r ett f√∂retag som tillhandah√•ller reseguider i PDF format f√∂r nedladdning. Min roll var att integrera partnersidor med fastchecks nedladdning system och utveckla den egna sajten. Jag tog √§ven fram en ny integrationsmetod som gjorde det l√§ttare f√∂r icke teknisk personal att p√• kort tid ta fram en ny integration √•t partners s√• man snabbare kunde f√• spridning av reseguiderna.",
        "tech": {
          "server": [],
          "client": [],
          "environment": [],
          "devops": []
        }
      },
      {
        "title": "Hewlett Packard (Praktik via Tongji University)",
        "icon": "/hp-hewlett-packard.svg",
        "period": {
          "from": "2008-01-01T00:00:00Z",
          "to": "2008-04-01T00:00:00Z"
        },
        "role": "Full stack developer",
        "location": "Shanghai",
        "description": "Jag bodde i Shanghai och praktiserade p√• HP i 5 m√•nader via Tongji University d√§r jag var utbytesstudent. Jag var med och utvecklade ett felrapporteringssystem som anv√§nds internt d√• h√•rdvara gick s√∂nder eller inte fungerade. Jag jobbade i team p√• 3 personer vilket betydde mycket eget ansvar. Jag drev √§ven kurs i JavaScript f√∂r mina kollegor som ville l√§ra sig mer om frontend utveckling. ",
        "tech": {
          "server": [],
          "client": [],
          "environment": [],
          "devops": []
        }
      }
    ]
  },
  "skills": [
    {
      "name": ".NET/.NET Core",
      "level": 90
    },
    {
      "name": "C#",
      "level": 90
    },
    {
      "name": "SQL, SQL Server, Azure SQL Server",
      "level": 70
    },
    {
      "name": "Cosmos DB",
      "level": 70
    },
    {
      "name": "CI/CD (Azure DevOps, AppVeyor, Jenkins)",
      "level": 80
    },
    {
      "name": "Monitoring (Grafana, Prometheus, Loki, Alerts)",
      "level": 50
    },
    {
      "name": "Message brokers: RabbitMQ, Azure Service Bus, Kafka",
      "level": 60
    },
    {
      "name": "Kubernetes, Helm, Azure Kuberenetes, Docker",
      "level": 70
    },
    {
      "name": "Microservice Architecture",
      "level": 70
    },
    {
      "name": "JavaScript/TypeScript",
      "level": 90
    },
    {
      "name": "React",
      "level": 70
    },
    {
      "name": "Angular",
      "level": 80
    },
    {
      "name": "Azure",
      "level": 70
    },
    {
      "name": "HTML,CSS, SASS",
      "level": 70
    }
  ],
  "education": [
    {
      "educationName":"Computer Science",
       "schoolName": "Tongji University",
       "city": "Shanghai",
      "from": "2008-06-02T00:00:00Z",
      "to": "2009-04-02T00:00:00Z"
    },
    {
      "educationName": "Datavetenskapliga programmet",
      "schoolName": "Uppsala Universitet",
      "city": "Uppsala",
      "from": "2005-09-02T00:00:00Z",
      "to": "2008-06-02T00:00:00Z"
    },
    {
      "educationName": "Naturvetenskapliga programmet",
      "schoolName": "Uppsala Universitet",
      "city": "Uppsala",
      "from": "2004-09-02T00:00:00Z",
      "to": "2005-06-02T00:00:00Z"
    },
    {
      "educationName": "Radiol√§nkman",
      "schoolName": "F√∂rsvaret S1",
      "city": "Enk√∂ping",
      "from": "2003-09-02T00:00:00Z",
      "to": "2004-04-02T00:00:00Z"
    },
    {
      "educationName": "Teknikprogrammet",
      "schoolName": "Fyrisskolan",
      "city": "Uppsala",
      "from": "2000-09-02T00:00:00Z",
      "to": "2003-06-02T00:00:00Z"
    }  
  ]
  
}

